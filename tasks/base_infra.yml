---
- name: Docker network
  community.docker.docker_network:
    name: "{{ paperless_ngx_docker_dedicated_docker_network_name }}"
  when: paperless_ngx_docker_dedicated_docker_network_name | length > 0

- name: Run Redis cache
  community.docker.docker_container:
    name: "{{ paperless_ngx_docker_redis_container_name }}"
    image: "{{ paperless_ngx_docker_redis_image }}"
    state: started
    restart_policy: unless-stopped
    pull: true
    volumes:
      - "{{ paperless_ngx_docker_redis_path }}:/data"
    # command: redis-server --appendonly yes # Enable AOF persistence (optional)
    networks: >-
      {{ omit
      if paperless_ngx_docker_dedicated_docker_network_name | length == 0
      else [{'name': paperless_ngx_docker_dedicated_docker_network_name}] }}
- name: DB cpmtainer
  community.docker.docker_container:
    name: "{{ paperless_ngx_docker_db_container_name }}"
    image: "{{ paperless_ngx_docker_db_image }}"
    restart_policy: unless-stopped
    state: started
    pull: true
    user: >-
      {{ omit
      if paperless_ngx_docker_user_host | length == 0 and
         paperless_ngx_docker_group_host | length == 0
      else
        paperless_user.uid~':'~paperless_group.gid
      }}
    networks: >-
      {{ omit
      if paperless_ngx_docker_dedicated_docker_network_name | length == 0
      else [{'name': paperless_ngx_docker_dedicated_docker_network_name}] }}
    volumes:
      - "{{ paperless_ngx_docker_db_path }}:/var/lib/postgresql/data"
      - "/etc/passwd:/etc/passwd:ro"
      - "/etc/group:/etc/group:ro"
    env:
      POSTGRES_DB: "{{ paperless_ngx_docker_db_name }}"
      POSTGRES_USER: "{{ paperless_ngx_docker_db_user }}"
      POSTGRES_PASSWORD: "{{ paperless_ngx_docker_db_password }}"

- name: Paperless cpmtainer
  community.docker.docker_container:
    name: "{{ paperless_ngx_docker_app_container_name }}"
    image: "{{ paperless_ngx_docker_app_image }}"
    restart_policy: unless-stopped
    networks: >-
      {{ omit
      if paperless_ngx_docker_dedicated_docker_network_name | length == 0
      else [{'name': paperless_ngx_docker_dedicated_docker_network_name}] }}
    ports: >-
      {{ omit
      if paperless_ngx_docker_reverse_proxy_enable
      else [paperless_ngx_docker_port ~':8000'] }}
    volumes:
      - "{{ paperless_ngx_docker_app_data_path }}:/usr/src/paperless/data"
      - "{{ paperless_ngx_docker_app_media_path }}:/usr/src/paperless/media"
      - "{{ paperless_ngx_docker_app_exort_path }}:/usr/src/paperless/export"
      - "{{ paperless_ngx_docker_app_consume_path }}:/usr/src/paperless/consume"
    env:
      USERMAP_UID: "{{ paperless_ngx_docker_app_usermap_uid }}"
      USERMAP_GID: "{{ paperless_ngx_docker_app_usermap_gid }}"
      PAPERLESS_SECRET_KEY: "{{ paperless_ngx_docker_app_secret_key }}"
      PAPERLESS_DBENGINE: "{{ paperless_ngx_docker_app_env_database_engine }}"
      PAPERLESS_DBNAME: "{{ paperless_ngx_docker_db_name }}"
      PAPERLESS_DBUSER: "{{ paperless_ngx_docker_db_user }}"
      PAPERLESS_DBPASS: "{{ paperless_ngx_docker_db_password }}"
      PAPERLESS_DBHOST: "{{ paperless_ngx_docker_db_container_name }}"
      PAPERLESS_REDIS: "redis://{{ paperless_ngx_docker_redis_container_name }}:6379"
      PAPERLESS_ADMIN_USER: "{{ paperless_ngx_docker_app_admin_user }}"
      PAPERLESS_ADMIN_PASSWORD: "{{ paperless_ngx_docker_app_admin_password }}"
      PAPERLESS_OCR_LANGUAGE: "{{ paperless_ngx_docker_app_ocr_language }}"
      PAPERLESS_TIME_ZONE: "{{ paperless_ngx_docker_app_time_zone }}"
      PAPERLESS_URL: "{{ paperless_ngx_docker_app_url }}"
      PAPERLESS_CSRF_TRUSTED_ORIGINS: "{{ paperless_ngx_docker_app_csrf_trusted_origins }}"
      PAPERLESS_USE_X_FORWARD_HOST: "{{ paperless_ngx_docker_app_use_x_forward_host | string }}"
      PAPERLESS_USE_X_FORWARD_PORT: "{{ paperless_ngx_docker_app_use_x_forward_port | string }}"
      PAPERLESS_DEBUG: "{{ paperless_ngx_docker_app_enable_debug | string }}"
